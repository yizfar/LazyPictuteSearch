{"version":3,"sources":["pixa_comps/pixaInput.js","pixa_comps/pixaList.js","pixa_comps/appPixa.js","App.js","index.js"],"names":["PixaInput","props","inputRef","useRef","className","ref","placeholder","type","onClick","setUserSearch","current","value","PixaList","style","minHeight","pics_ar","map","item","src","previewURL","tags","views","likes","id","AppPixa","useState","userSearch","setPicsAr","allPic_ar","limitShow","endScreen","useEffect","doApi","window","addEventListener","onScroll","removeEventListener","_searchQ","a","url","axios","get","resp","data","hits","filterPics","innerHeight","document","documentElement","scrollTop","offsetHeight","temp_ar","splice","Fragment","App","ReactDOM","render","getElementById"],"mappings":"sRAkBeA,MAhBf,SAAmBC,GACjB,IAAIC,EAAWC,mBAKf,OACE,qBAAKC,UAAU,0DAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOC,IAAKH,EAAUI,YAAY,YAAYC,KAAK,SAASH,UAAU,iBACtE,wBAAQI,QARQ,WACpBP,EAAMQ,cAAcP,EAASQ,QAAQC,QAODP,UAAU,0BAA1C,0BCgBOQ,MA1Bf,SAAkBX,GAKhB,OACE,sBAAKY,MAAO,CAACC,UAAU,QAASV,UAAU,cAA1C,UACE,qBAAKA,UAAU,6BAAf,SACGH,EAAMc,QAAQC,KAAI,SAAAC,GACjB,OACE,sBAAmBb,UAAU,gCAA7B,UACE,qBAAKc,IAAKD,EAAKE,WAAYf,UAAU,0BACrC,6BAAKa,EAAKG,OACV,0CAAaH,EAAKI,SAClB,0CAAaJ,EAAKK,WAJVL,EAAKM,SASvB,oBAAInB,UAAU,8BAAd,6DCgCWoB,MAhDf,SAAiBvB,GACf,MAAiCwB,mBAAS,OAA1C,mBAAKC,EAAL,KAAgBjB,EAAhB,KACA,EAA0BgB,mBAAS,IAAnC,mBAAKV,EAAL,KAAaY,EAAb,KACIC,EAAY,GACZC,EAAY,EACZC,GAAY,EAEhBC,qBAAU,WAGR,OAFAC,EAAMN,GACNO,OAAOC,iBAAiB,SAAWC,GAC5B,WACLF,OAAOG,oBAAoB,SAAWD,MAExC,CAACT,IAEH,IAAMM,EAAK,uCAAG,WAAMK,GAAN,iBAAAC,EAAA,6DACRC,EADQ,4EACmEF,EADnE,0CAEKG,IAAMC,IAAIF,GAFf,OAERG,EAFQ,OAGZd,EAAWc,EAAKC,KAAKC,KACrBC,IAJY,2CAAH,sDASLV,EAAW,WACZF,OAAOa,YAAcC,SAASC,gBAAgBC,WAAaF,SAASC,gBAAgBE,aAAe,IAAMpB,IAC1GA,GAAY,EACZD,GAAa,EACbgB,MAGEA,EAAa,WACjB,IAAIM,EAAO,YAAOvB,GAGlBD,EAAUwB,EAAQC,OAAO,EAAEvB,IAC3BC,GAAY,GAId,OACE,eAAC,IAAMuB,SAAP,WACE,cAAC,EAAD,CAAW5C,cAAeA,IAC1B,cAAC,EAAD,CAAUM,QAASA,QC7BVuC,MAZf,WAEE,OACI,qBAAKlD,UAAU,MAAf,SAEE,cAAC,EAAD,OCNRmD,IAASC,OAAO,cAAC,EAAD,IACdT,SAASU,eAAe,W","file":"static/js/main.f9bb71d1.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nfunction PixaInput(props){\r\n  let inputRef = useRef();\r\n  const onSearchClick = () => {\r\n    props.setUserSearch(inputRef.current.value);\r\n  }\r\n\r\n  return(\r\n    <nav className='navbar navbar-light bg-light justify-content-center p-4'>\r\n      <div className='d-flex col-md-4'>\r\n        <input ref={inputRef} placeholder='search...' type=\"search\" className='form-control'/>\r\n        <button onClick={onSearchClick} className=\"btn btn-outline-success\">Search</button>\r\n      </div>\r\n    </nav> \r\n  )\r\n}\r\n\r\nexport default PixaInput\r\n\r\n","import React from 'react';\r\n\r\nfunction PixaList(props){\r\n\r\n \r\n\r\n\r\n  return(\r\n    <div style={{minHeight:\"94vh\"}} className=' text-light'>\r\n      <div className=\"row justify-content-center\">\r\n        {props.pics_ar.map(item => {\r\n          return(\r\n            <div key={item.id} className='col-md-5  border p-3 m-3  pic'>\r\n              <img src={item.previewURL} className='float-start me-2 w-25'/>\r\n              <h2>{item.tags}</h2>\r\n              <div>Views: {item.views}</div>\r\n              <div>Likes: {item.likes}</div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    <h2 className='text-center p-5 text-danger'>Scroll to see more pics wite my lazzy tech </h2>\r\n      \r\n      \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default PixaList","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport PixaInput from './pixaInput';\r\nimport PixaList from './pixaList';\r\n\r\nfunction AppPixa(props){\r\n  let [userSearch,setUserSearch] = useState(\"car\")\r\n  let [pics_ar,setPicsAr] = useState([])\r\n  let allPic_ar = [];\r\n  let limitShow = 2;\r\n  let endScreen = false;\r\n\r\n  useEffect(() => {\r\n    doApi(userSearch);\r\n    window.addEventListener(\"scroll\" , onScroll)\r\n    return () => {\r\n      window.removeEventListener(\"scroll\" , onScroll)\r\n    }\r\n  },[userSearch])\r\n\r\n  const doApi = async(_searchQ) => {\r\n    let url = `https://pixabay.com/api/?key=15489555-318fcca1200a48f374a1ce3ea&q=${_searchQ}&image_type=photo&pretty=true`;\r\n    let resp = await axios.get(url);\r\n    allPic_ar= resp.data.hits\r\n    filterPics();\r\n\r\n  }\r\n\r\n  \r\n  const onScroll = () => {\r\n    if(window.innerHeight + document.documentElement.scrollTop >= document.documentElement.offsetHeight - 1 && !endScreen){\r\n      endScreen = true;\r\n      limitShow += 2;\r\n      filterPics();\r\n    }\r\n  }\r\n  const filterPics = () => {\r\n    let temp_ar = [...allPic_ar]\r\n    // דואג שיחזיר רק כמות מאינדקס 0 עד הערך של המשתנה\r\n    // שבגלילה משתנה ומוסיף לעצמו 10 כל פעם\r\n    setPicsAr(temp_ar.splice(0,limitShow));\r\n    endScreen = false;\r\n\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <PixaInput setUserSearch={setUserSearch}/>\r\n      <PixaList pics_ar={pics_ar} />\r\n    </React.Fragment> \r\n  )\r\n}\r\n\r\nexport default AppPixa","\r\nimport './App.css';\r\nimport AppPixa from './pixa_comps/appPixa';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div className=\"App\">\r\n     \r\n        <AppPixa />\r\n       \r\n      </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}